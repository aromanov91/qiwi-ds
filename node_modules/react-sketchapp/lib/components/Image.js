"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ImageSourcePropType = void 0;

var React = require("react");

var PropTypes = require("prop-types");

var _airbnbPropTypes = require("airbnb-prop-types");

var _stylesheet = require("../stylesheet");

var _ResizingConstraintPropTypes = require("./ResizingConstraintPropTypes");

var _ResizeModePropTypes = require("./ResizeModePropTypes");

var _ImageStylePropTypes = require("./ImageStylePropTypes");

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ImageURISourcePropType = PropTypes.shape({
  uri: PropTypes.string.isRequired,
  height: PropTypes.number,
  width: PropTypes.number // bundle: PropTypes.string,
  // method: PropTypes.string,
  // headers: PropTypes.objectOf(PropTypes.string),
  // body: PropTypes.string,
  // cache: PropTypes.oneOf(['default', 'reload', 'force-cache', 'only-if-cached']),
  // scale: PropTypes.number,

});
var ImageSourcePropType = PropTypes.oneOfType([ImageURISourcePropType, // PropTypes.arrayOf(ImageURISourcePropType), // TODO: handle me
PropTypes.string]);
exports.ImageSourcePropType = ImageSourcePropType;
var ResizeModes = {
  contain: 'Fit',
  cover: 'Fill',
  stretch: 'Stretch',
  center: 'Fill',
  // TODO(gold): implement ResizeModes.center
  repeat: 'Tile',
  none: 'Fill'
}; // $FlowFixMe

var Image =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Image, _React$Component);

  function Image() {
    _classCallCheck(this, Image);

    return _possibleConstructorReturn(this, _getPrototypeOf(Image).apply(this, arguments));
  }

  _createClass(Image, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          source = _this$props.source,
          defaultSource = _this$props.defaultSource,
          resizeMode = _this$props.resizeMode,
          name = _this$props.name,
          resizingConstraint = _this$props.resizingConstraint;
      var style = _stylesheet.default.flatten(this.props.style) || {};
      var sketchResizeMode = ResizeModes[resizeMode || style && style.resizeMode || 'cover'];

      if (source && typeof source !== 'string') {
        style = _objectSpread({
          height: source.height,
          width: source.width
        }, style);
      }

      return React.createElement("image", {
        style: style,
        source: source || defaultSource,
        name: name,
        resizeMode: sketchResizeMode,
        resizingConstraint: resizingConstraint
      }, children);
    }
  }]);

  return Image;
}(React.Component);

exports.default = Image;

_defineProperty(Image, "propTypes", {
  name: PropTypes.string,
  children: PropTypes.node,
  defaultSource: ImageSourcePropType,
  resizeMode: _ResizeModePropTypes.default,
  source: ImageSourcePropType,
  style: (0, _airbnbPropTypes.or)([PropTypes.shape(_ImageStylePropTypes.default), PropTypes.number]),
  resizingConstraint: PropTypes.shape(_objectSpread({}, _ResizingConstraintPropTypes.default))
});

_defineProperty(Image, "defaultProps", {
  name: 'Image'
});