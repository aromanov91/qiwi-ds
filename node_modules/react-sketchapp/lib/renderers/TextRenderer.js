"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _SketchRenderer2 = require("./SketchRenderer");

var _textLayers = require("../jsonUtils/textLayers");

var _models = require("../jsonUtils/models");

var _TextStyles = require("../sharedStyles/TextStyles");

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var TextRenderer =
/*#__PURE__*/
function (_SketchRenderer) {
  _inherits(TextRenderer, _SketchRenderer);

  function TextRenderer() {
    _classCallCheck(this, TextRenderer);

    return _possibleConstructorReturn(this, _getPrototypeOf(TextRenderer).apply(this, arguments));
  }

  _createClass(TextRenderer, [{
    key: "getDefaultGroupName",
    value: function getDefaultGroupName(props) {
      return props.name || 'Text';
    }
  }, {
    key: "renderBackingLayers",
    value: function renderBackingLayers(layout, style, textStyle, props) {
      var name = props.name; // Append all text nodes's content into one string

      if (!name && props.textNodes) {
        name = '';
        props.textNodes.forEach(function (textNode) {
          name += textNode.content;
        });
      }

      var frame = (0, _models.makeRect)(0, 0, layout.width, layout.height);
      var layer = (0, _textLayers.default)(frame, name, props.textNodes, props.resizingConstraint);

      var resolvedTextStyle = _TextStyles.default.resolve(textStyle);

      if (resolvedTextStyle) {
        layer.style = resolvedTextStyle.sketchStyle;
        layer.style.sharedObjectID = resolvedTextStyle.sharedObjectID;
      } else {
        var resolvedStyle = _TextStyles.default.resolve(props.style);

        if (resolvedStyle) {
          layer.style = resolvedStyle.sketchStyle;
          layer.style.sharedObjectID = resolvedStyle.sharedObjectID;
        }
      }

      return [layer];
    }
  }]);

  return TextRenderer;
}(_SketchRenderer2.default);

exports.default = TextRenderer;